
##########
# internal markdown links can be referenced {#link_to_title}
# ============================================================ 
# [clickable_label](@ref link_to_title)
#


ALIASES += sa_h5cpp="@sa h5::open h5::read h5::write  h5::fd_t h5::ds_t h5::err_t"
ALIASES += sa_exception="@exception if dataset not found throws std::runtime_error"
ALIASES += sa_conversion="see [explicit/implicit conversion](@ref link_conversion) for H5CPP"

############ FUNCTION PARAMS
#
ALIASES += par_file_path="@param file_path the location where the hdf5 container is created within the OS file system."
ALIASES += par_dataset_path="@param dataset_path the location of the dataset/document within HDF5 container"
ALIASES += par_fcrt_flags="@param flags File create flags: (`H5F_ACC_TRUNC` | `H5F_ACC_EXCL` ) | ` H5F_ACC_DEBUG`"
ALIASES += par_fopn_flags="@param flags File open flags: (`H5F_ACC_RDWR` | `H5F_ACC_RDONLY`)"

ALIASES += par_fd="@param fd valid h5::fd_t file descriptor"
ALIASES += par_ds="@param ds valid h5::ds_t dataset descriptor"
ALIASES += par_sp="@param sp valid h5::sp_t dataspace descriptor"

ALIASES += par_fcpl="@param fcpl [file creation property list identifier](@ref link_fcpl_l), used when modifying default file meta-data"
ALIASES += par_fapl="@param fapl [file access property list identifier](@ref link_fapl_l): "

ALIASES += par_dapl="@param dapl [data access property list identifier](@ref link_dapl_l)  "
ALIASES += par_dcpl="@param dcpl [data creation property list identifier](@ref link_dcpl_l)  "
ALIASES += par_dxpl="@param dcpl [data trnsfer property list identifier](@ref link_dxpl_l)  "
ALIASES += par_lcpl="@param lcpl [link creation property list identifier](@ref link_lcpl_l)  "

ALIASES += par_ref="@param ref   [armadillo],[eigen],[blitz],[blaze],[dlib],[ublas] std::vector<T> object references"
ALIASES += par_ptr="@param ptr pointer to a sufficient size allocated memory where data is loaded"
ALIASES += par_offset="@param offset the coordinates withing HDF5 dataset with rank of the file space, for instance a cube {0,0,0}"
ALIASES += par_stride="@param stride docs/links/h5cpp.txt par_stride update"
ALIASES += par_count="@param count  docs/links/h5cpp.txt par_count update" "
ALIASES += par_block="@param block docs/links/h5cpp.txt par_block update"
ALIASES += par_max_dims="@param max_dims maximum size of the object, H5S_UNLIMITED to mark extendable dimension"
ALIASES += par_current_dims="@param current_dims actual size of the object"
ALIASES += par_chunk_dims="@param chunk for better performance data sets maybe stored in chunks, which is a unit size for IO operations. Streaming, and filters may be applied only on chunked datasets."
ALIASES += par_deflate="@param deflate 0-9 controls [gzip] compression."

############ TEMPLATE PARAMS
#
ALIASES += tpar_T="@tparam T [[unsigned]( int8_t | int16_t | int32_t | int64_t) | (float | double)](@ref link_base_template_types)"
ALIASES += tpar_obj="@tparam T [armadillo],[eigen],[blitz],[blaze],[dlib],[ublas] "

ALIASES += tpar_FD="@tparam fd_t  `hid_t` | `h5::fd_t` to support CAPI calls"
ALIASES += tpar_DS="@tparam ds_t  `hid_t` | `h5::ds_t` to support CAPI calls"
ALIASES += tpar_AP="@tparam fcpl_t control property list type: `h5::fcpl_t` | `hid_t` | `H5P_DEFAULT` \sa_conversion"
ALIASES += tpar_CP="@tparam fapl_t access propery list type:   `h5::fapl_t` | `hid_t` | `H5P_DEFAULT` \sa_conversion"

############ RETURN 
#
ALIASES += returns_fd="@return an open h5::fd_t descriptor"
ALIASES += returns_ds="@return an open h5::ds_t descriptor"
ALIASES += returns_err="@return  h5::herr_t error descriptor"
ALIASES += returns_object="@return a valid instantiated object of T element type"
ALIASES += returns_string_vec="@return a std::vector<std::string>"

############ FUNCTIONS

ALIASES += func_create_hdr="\ingroup io-create "
ALIASES += func_create_spacedesc="\brief **T** template parameter defines the underlying representation of document created within HDF5 container referenced by **fd** descriptor. **path** behaves much similar to POSIX files system path: either relative or absolute. This version is to pass **data space descriptor** to system call, which contains all information needed to create the **dataset**<br>"
ALIASES += func_create_desc="\brief **T** template parameter defines the underlying representation of document created within HDF5 container referenced by **fd** descriptor. **path** behaves much similar to POSIX files system path: either relative or absolute. HDF5 supports arbitrary number of dimensions which is specified by **max_dim**.  The  passed **dcpl**, **dapl**  provides fine controls how this array is created or accessed while **lcpl** is to control the charater set of **path**, defaulting to **utf8**. <br>"
ALIASES += func_create_links="\sa_h5cpp \sa_hdf5 \sa_stl \sa_linalg"


ALIASES += func_write_hdr="\ingroup io-write "
ALIASES += func_write_desc="full description of h5::write function update here: docs/links/h5cpp.txt"

ALIASES += func_read_hdr="\ingroup io-read "
ALIASES += func_read_desc="full description of h5::write function update here: docs/links/h5cpp.txt"


