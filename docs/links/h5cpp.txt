
##########
# internal markdown links can be referenced {#link_to_title}
# ============================================================ 
# [clickable_label](@ref link_to_title)
#


ALIASES += sa_h5cpp="@sa h5::open h5::read h5::write  h5::fd_t h5::ds_t h5::err_t"
ALIASES += sa_exception="@exception if dataset not found thorws std::runtime_error"
ALIASES += sa_conversion="see [explicit/implicit conversion](@ref link_conversion) for H5CPP"

############ FUNCTION PARAMS
#
ALIASES += par_file_path="@param path the location where the hdf5 container is created within the OS file system."
ALIASES += par_dataset_path="@param path the location of the dataset/document within HDF5 container"
ALIASES += par_fapl_flags="@param flags File access flags: (`H5F_ACC_TRUNC` | `H5F_ACC_EXCL` ) | ` H5F_ACC_DEBUG`"

ALIASES += par_fd="@param fd valid h5::fd_t file descriptor"
ALIASES += par_ds="@param ds valid h5::ds_t dataset descriptor"

ALIASES += par_fcpl="@param fcpl [file creation property list identifier](@ref link_fcpl_l), used when modifying default file meta-data"
ALIASES += par_fapl="@param fapl [file access property list identifier](@ref link_fapl_l). If parallel file access is desired, this is a collective call according to the communicator stored in the fapl_id"

ALIASES += par_dapl="@param dapl [data access property list identifier](@ref link_dapl_l)  "
ALIASES += par_dcpl="@param dcpl [data creation property list identifier](@ref link_dcpl_l)  "

ALIASES += par_ref="@param ref   [armadillo],[eigen],[blitz],[blaze],[dlib],[ublas] std::vector<T> object references"
ALIASES += par_ptr="@param ptr pointer to a sufficient size allocated memory where data is loaded"
ALIASES += par_offset="@param offset the coordinates withing HDF5 dataset with rank of the file space, for instance a cube {0,0,0}"
ALIASES += par_count="@param count amount of data returned, each dimension must be in (1,max_dimension), for instance {1,3,10} returns a matrix"
ALIASES += par_max_dims="@param max_dims size of the object, H5S_UNLIMITED to mark extendable dimension"
ALIASES += par_chunk_dims="@param chunk_dims for better performance data sets maybe stored in chunks, which is a unit size for IO operations. Streaming, and filters may be applied only on chunked datasets."
ALIASES += par_deflate="@param deflate 0-9 controls [gzip] compression."

############ TEMPLATE PARAMS
#
ALIASES += tpar_T="@tparam T [[unsigned]( int8_t | int16_t | int32_t | int64_t) | (float | double)](@ref link_base_template_types)"
ALIASES += tpar_obj="@tparam T [armadillo],[eigen],[blitz],[blaze],[dlib],[ublas] "
ALIASES += tpar_FD="@tparam fd_t  `hid_t` | `h5::fd_t` to support CAPI calls"
ALIASES += tpar_DS="@tparam ds_t  `hid_t` | `h5::ds_t` to support CAPI calls"
ALIASES += tpar_AP="@tparam fcpl_t control property list type: `h5::fcpl_t` | `hid_t` | `H5P_DEFAULT` \sa_conversion"
ALIASES += tpar_CP="@tparam fapl_t access propery list type:   `h5::fapl_t` | `hid_t` | `H5P_DEFAULT` \sa_conversion"

############ RETURN 
#
ALIASES += returns_fd="@return an open h5::fd_t descriptor"
ALIASES += returns_ds="@return an open h5::ds_t descriptor"
ALIASES += returns_object="@return a valid instantiated object of T template type"
ALIASES += returns_string_vec="@return a std::vector<std::string>"

